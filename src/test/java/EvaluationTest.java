import org.junit.jupiter.api.Test;
import sk.vighnorbert.IdentifiedPerson;
import sk.vighnorbert.Main;
import sk.vighnorbert.Person;
import sk.vighnorbert.PersonIndex;

import java.io.IOException;

import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;

class EvaluationTest {

    @Test
    void testPositives() throws IOException {
        PersonIndex index = new PersonIndex();
        index.readFromFile();

        // all the people in this input should be related to themselves
        String input =
            // close matches
            "Charles III\tElizabeth II\n" +
            "Charles III\tElizabeth II\n" +
            "Charles III\tDiana, Princess of Wales\n" +
            "Charles III\tCamilla, Queen Consort\n" +
            "Charles III\tWilliam, Prince of Wales\n" +
            "Charles III\tCatherine, Princess of Wales\n" +
            "Charles III\tPrince George of Wales\n" +
            "Charles III\tPrincess Charlotte of Wales (born 2015)\n" +
            "Charles III\tPrince Louis of Wales\n" +
            "Charles III\tArchie Mountbatten-Windsor\n" +

            // matches by two steps
            "Elizabeth II\tPrincess Margaret, Countess of Snowdon\n" +
            "Elizabeth II\tGeorge V\n" +
            "Elizabeth II\tMary of Teck\n" +
            "George VI\tEdward VII\n" +
            "George VI\tAlexandra of Denmark\n" +

            // distant matches
            "Elizabeth II\tPrincess Alexandra, 2nd Duchess of Fife\n" +
            "Elizabeth II\tPrince Albert Victor, Duke of Clarence and Avondale\n" +
            "Elizabeth II\tQueen Victoria\n" +
            "Elizabeth II\tHarald V of Norway\n" +
            "Elizabeth II\tCount Flemming Valdemar of Rosenborg";

        int tp = 0, fn = 0;

        for (String line : input.split("\n")) {
            String[] names = line.split("\t");
            IdentifiedPerson p1 = (IdentifiedPerson) index.getResults(names[0]).get(0);
            IdentifiedPerson p2 = (IdentifiedPerson) index.getResults(names[1]).get(0);

            if (Main.relatives(index, p1, p2)) {
                tp++;
            } else {
                fn++;
            }
            if (Main.relatives(index, p2, p1)) {
                tp++;
            } else {
                fn++;
            }
        }

        System.out.println("TP: " + tp);
        System.out.println("FN: " + fn);
    }

    @Test
    void testNegatives() throws IOException {
        PersonIndex index = new PersonIndex();
        index.readFromFile();

        // inputs generated by link https://en.wikipedia.org/wiki/Special:Random
        String input =
            "Elizabeth II\tBua Kitiyakara\n" +
            "Elizabeth II\tLuka Bogavac\n" +
            "Elizabeth II\tAntoine V de Gramont\n" +
            "Elizabeth II\tGuillermo Tritschler y Córdova\n" +
            "Elizabeth II\tP. A. Ó Síocháin\n" +
            "Elizabeth II\tTre Hargett\n" +
            "Elizabeth II\tCarl Schmitt (artist)\n" +
            "Elizabeth II\tSuzanne Greco\n" +
            "Elizabeth II\tJ. Jill Robinson\n" +
            "Elizabeth II\tRes Jost\n" +
            "Elizabeth II\tEva Heyman\n" +
            "Elizabeth II\tCharles Garland (philanthropist)\n" +
            "Elizabeth II\tHilary Minc\n" +
            "Elizabeth II\tKen Hendricks\n" +
            "Elizabeth II\tJuris Fernandez\n" +
            "Elizabeth II\tWilliam D. Bishop\n" +
            "Elizabeth II\tIchsan Loulembah\n" +
            "Elizabeth II\tPaul Émile de Puydt\n" +
            "Elizabeth II\tRosa Maria Carrasco i Azemar\n" +
            "Elizabeth II\tMari Carmen Díaz de Mendoza";

        int tn = 0, fp = 0;

        for (String line : input.split("\n")) {
            String[] names = line.split("\t");
            IdentifiedPerson p1 = (IdentifiedPerson) index.getResults(names[0]).get(0);
            IdentifiedPerson p2 = (IdentifiedPerson) index.getResults(names[1]).get(0);

            if (Main.relatives(index, p1, p2)) {
                fp++;
            } else {
                tn++;
            }
            if (Main.relatives(index, p2, p1)) {
                fp++;
            } else {
                tn++;
            }
        }

        System.out.println("FP: " + fp);
        System.out.println("TN: " + tn);
    }

}